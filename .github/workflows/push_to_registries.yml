name: Build and publish the app

on:
  push:
    branches: [ master ]

concurrency:
  # Only run once for latest commit per ref and cancel other (previous) runs.
  group: ci-${{ github.ref }}
  cancel-in-progress: true

permissions:
  contents: read # for checkout

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: checkout
        uses: actions/checkout@v2

      - name: Setup Scala
        uses: japgolly/setup-everything-scala@v3.1
        with:
          java-version: 'adopt:1.11.0-11'
          node-version: '16.7.0'

      - name: Cache compiled code
        uses: actions/cache@v3
        with:
          path: |
            **/target/
            /home/runner/.ivy2/local
          key: compiled-code-cache-${{ hashFiles('**/build.sbt') }}
          restore-keys: compiled-code-cache-

      - name: Check code format
        run: sbt scalafmtCheckAll

      - name: Compile
        run: CI=true sbt compile

      - name: Run tests
        run: CI=true sbt test

      - name: Prepare web build
        run: sbt web/build

      - name: Prepare server build
        run: sbt server/dist

      - name: Login to GitHub Container Registry
        use: docker/login-action@v1
        with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push image
        run: |
          GIT_COMMIT_HASH=`git log -n 1 --pretty=format:'%h' --abbrev=7`
          BRANCH=`git branch`
          docker build . --tag ghcr.io/chenghsienwen/scala-webapp-template-${BRANCH}:${GIT_COMMIT_HASH}
          docker run ghcr.io/chenghsienwen/scala-webapp-template-${BRANCH}:${GIT_COMMIT_HASH}
          docker push ghcr.io/chenghsienwen/scala-webapp-template-${BRANCH}:${GIT_COMMIT_HASH}
        shell: bash
